{"remainingRequest":"D:\\Documents\\tddd27_2021\\node_modules\\babel-loader\\lib\\index.js!D:\\Documents\\tddd27_2021\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\Documents\\tddd27_2021\\src\\auth\\authGuard.js","dependencies":[{"path":"D:\\Documents\\tddd27_2021\\src\\auth\\authGuard.js","mtime":1622555291799},{"path":"D:\\Documents\\tddd27_2021\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622469731099},{"path":"D:\\Documents\\tddd27_2021\\node_modules\\babel-loader\\lib\\index.js","mtime":1622469728174},{"path":"D:\\Documents\\tddd27_2021\\node_modules\\eslint-loader\\index.js","mtime":1622469737822}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyoqDQogKiBNYWtlIGl0IHJlZGlyZWN0IHRvIGxvZ2luIHBhZ2UgaWYgbm90IHNpZ25lZCBpbg0KICovCmltcG9ydCB7IGdldEluc3RhbmNlIH0gZnJvbSAiLi9pbmRleCI7CmV4cG9ydCB2YXIgYXV0aEd1YXJkID0gZnVuY3Rpb24gYXV0aEd1YXJkKHRvLCBmcm9tLCBuZXh0KSB7CiAgdmFyIGF1dGhTZXJ2aWNlID0gZ2V0SW5zdGFuY2UoKTsKCiAgdmFyIGZuID0gZnVuY3Rpb24gZm4oKSB7CiAgICAvLyBJZiB0aGUgdXNlciBpcyBhdXRoZW50aWNhdGVkLCBjb250aW51ZSB3aXRoIHRoZSByb3V0ZQogICAgaWYgKGF1dGhTZXJ2aWNlLmlzQXV0aGVudGljYXRlZCkgewogICAgICByZXR1cm4gbmV4dCgpOwogICAgfSAvLyBPdGhlcndpc2UsIGxvZyBpbgoKCiAgICBhdXRoU2VydmljZS5sb2dpbldpdGhSZWRpcmVjdCh7CiAgICAgIGFwcFN0YXRlOiB7CiAgICAgICAgdGFyZ2V0VXJsOiB0by5mdWxsUGF0aAogICAgICB9CiAgICB9KTsKICB9OyAvLyBJZiBsb2FkaW5nIGhhcyBhbHJlYWR5IGZpbmlzaGVkLCBjaGVjayBvdXIgYXV0aCBzdGF0ZSB1c2luZyBgZm4oKWAKCgogIGlmICghYXV0aFNlcnZpY2UubG9hZGluZykgewogICAgcmV0dXJuIGZuKCk7CiAgfSAvLyBXYXRjaCBmb3IgdGhlIGxvYWRpbmcgcHJvcGVydHkgdG8gY2hhbmdlIGJlZm9yZSB3ZSBjaGVjayBpc0F1dGhlbnRpY2F0ZWQKCgogIGF1dGhTZXJ2aWNlLiR3YXRjaCgibG9hZGluZyIsIGZ1bmN0aW9uIChsb2FkaW5nKSB7CiAgICBpZiAobG9hZGluZyA9PT0gZmFsc2UpIHsKICAgICAgcmV0dXJuIGZuKCk7CiAgICB9CiAgfSk7Cn07"},{"version":3,"sources":["D:/Documents/tddd27_2021/src/auth/authGuard.js"],"names":["getInstance","authGuard","to","from","next","authService","fn","isAuthenticated","loginWithRedirect","appState","targetUrl","fullPath","loading","$watch"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AAC3C,MAAMC,WAAW,GAAGL,WAAW,EAA/B;;AAEA,MAAMM,EAAE,GAAG,SAALA,EAAK,GAAM;AACf;AACA,QAAID,WAAW,CAACE,eAAhB,EAAiC;AAC/B,aAAOH,IAAI,EAAX;AACD,KAJc,CAMf;;;AACAC,IAAAA,WAAW,CAACG,iBAAZ,CAA8B;AAAEC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,SAAS,EAAER,EAAE,CAACS;AAAhB;AAAZ,KAA9B;AACD,GARD,CAH2C,CAa3C;;;AACA,MAAI,CAACN,WAAW,CAACO,OAAjB,EAA0B;AACxB,WAAON,EAAE,EAAT;AACD,GAhB0C,CAkB3C;;;AACAD,EAAAA,WAAW,CAACQ,MAAZ,CAAmB,SAAnB,EAA8B,UAAAD,OAAO,EAAI;AACvC,QAAIA,OAAO,KAAK,KAAhB,EAAuB;AACrB,aAAON,EAAE,EAAT;AACD;AACF,GAJD;AAKD,CAxBM","sourcesContent":["/**\r\n * Make it redirect to login page if not signed in\r\n */\r\nimport { getInstance } from \"./index\";\r\n\r\nexport const authGuard = (to, from, next) => {\r\n  const authService = getInstance();\r\n\r\n  const fn = () => {\r\n    // If the user is authenticated, continue with the route\r\n    if (authService.isAuthenticated) {\r\n      return next();\r\n    }\r\n\r\n    // Otherwise, log in\r\n    authService.loginWithRedirect({ appState: { targetUrl: to.fullPath } });\r\n  };\r\n\r\n  // If loading has already finished, check our auth state using `fn()`\r\n  if (!authService.loading) {\r\n    return fn();\r\n  }\r\n\r\n  // Watch for the loading property to change before we check isAuthenticated\r\n  authService.$watch(\"loading\", loading => {\r\n    if (loading === false) {\r\n      return fn();\r\n    }\r\n  });\r\n};\r\n"]}]}