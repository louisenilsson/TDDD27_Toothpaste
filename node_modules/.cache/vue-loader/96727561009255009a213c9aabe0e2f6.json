{"remainingRequest":"D:\\Documents\\tddd27_2021\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Documents\\tddd27_2021\\src\\views\\BookedAppointments.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\Documents\\tddd27_2021\\src\\views\\BookedAppointments.vue","mtime":1622752300304},{"path":"D:\\Documents\\tddd27_2021\\node_modules\\css-loader\\dist\\cjs.js","mtime":1622558184171},{"path":"D:\\Documents\\tddd27_2021\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1622558196444},{"path":"D:\\Documents\\tddd27_2021\\node_modules\\postcss-loader\\src\\index.js","mtime":1622558191570},{"path":"D:\\Documents\\tddd27_2021\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622558180778},{"path":"D:\\Documents\\tddd27_2021\\node_modules\\vue-loader\\lib\\index.js","mtime":1622558196442}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KI2NhcmQtcGFkZGluZ3sNCiAgbWFyZ2luLXRvcDogMTVweDsNCn0NCiNib29raW5nLWp1bWJvew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KICANCn0NCiNoYXBweS1zcGFjZXsNCiAgcGFkZGluZy1ib3R0b206IDUwdmgNCn0NCg=="},{"version":3,"sources":["BookedAppointments.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"BookedAppointments.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>  \r\n    <div class=\"jumbotron\" id=\"booking-jumbo\">\r\n      <h2 class=\"display-4\">Appointments</h2>\r\n      <p class=\"lead\">Here you can see your booked appointments and book a new appointment.</p>\r\n      <hr class=\"my-4\">\r\n      <div>\r\n        <h3>My appointments</h3>\r\n        <div class=\"row\">\r\n        <div v-for=\"appointment in appointments\" :key=\"appointment._id\"  id=\"card-padding\">\r\n        <div class=\"col-4\">\r\n          <div class=\"card text-center\" style=\"width: 18rem;\">\r\n                <div class=\"card-body\">\r\n                 \r\n                    <p class=\"card-text\"> <strong> Date:</strong> <br> {{appointment.date}}</p>                   \r\n                    <p class=\"card-text\"> <strong>Time:</strong> <br> {{appointment.time}}</p>\r\n                    <button class=\"btn btn-outline-danger\" @click.prevent=\"deleteAppointment(appointment._id)\">Cancel Appointment</button>\r\n                   \r\n                </div>\r\n          </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <NewAppointment/>\r\n      </div>\r\n\r\n    </div>\r\n     <div id=\"happy-space\">\r\n      <footer>\r\n         \r\n      </footer>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NewAppointment from \"../components/NewAppointment\";\r\n\r\nexport default {\r\n  name: \"appointments\",\r\n  components: {\r\n    NewAppointment\r\n  },\r\n  data() {\r\n    return {\r\n      interval: null,\r\n      appointments: []\r\n    }\r\n  },\r\n  // Update data\r\n  async created() {\r\n    this.interval = setInterval(this.refreshData, 20)\r\n  },\r\n  methods: {\r\n    // get appointment data for the inlogged user\r\n    async refreshData(){\r\n      let uri = 'http://localhost:4000/appointments'; \r\n      const token = await this.$auth.getTokenSilently();\r\n      await this.axios.get(uri, {\r\n        params:{\r\n          email: this.$auth.user.email,\r\n        },\r\n        headers:{\r\n          Authorization: `Bearer ${token}`,\r\n          'content-type': 'application/json'\r\n        }\r\n      }).then(response => {\r\n          this.appointments = response.data;   \r\n      });\r\n    },\r\n    // Cancel an appointment\r\n    async deleteAppointment(id){\r\n      let uri = `http://localhost:4000/appointments/delete/${id}`;\r\n      const token = await this.$auth.getTokenSilently();\r\n\r\n      this.axios.delete(uri, {\r\n        params:{\r\n          email: this.$auth.user.email,\r\n        },\r\n        headers:{\r\n          Authorization: `Bearer ${token}`,\r\n          'content-type': 'application/json'\r\n        }\r\n      }).then(response => {\r\n          this.appointments.splice(this.appointments.indexOf(response.id), 1);\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#card-padding{\r\n  margin-top: 15px;\r\n}\r\n#booking-jumbo{\r\n  background-color: #fff;\r\n  \r\n}\r\n#happy-space{\r\n  padding-bottom: 50vh\r\n}\r\n</style>"]}]}