{"remainingRequest":"D:\\Documents\\tddd27_2021\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Documents\\tddd27_2021\\src\\components\\NewAppointment.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Documents\\tddd27_2021\\src\\components\\NewAppointment.vue","mtime":1622558197804},{"path":"D:\\Documents\\tddd27_2021\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622558180778},{"path":"D:\\Documents\\tddd27_2021\\node_modules\\babel-loader\\lib\\index.js","mtime":1622558178184},{"path":"D:\\Documents\\tddd27_2021\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1622558180778},{"path":"D:\\Documents\\tddd27_2021\\node_modules\\vue-loader\\lib\\index.js","mtime":1622558196442}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICJuZXdBcHBvaW50bWVudCIsDQogIGRhdGEoKXsNCiAgICAvLyBTdGFydCBmcm9tIHRvZGF5cyBkYXRlDQogICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKQ0KICAgIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUobm93LmdldEZ1bGxZZWFyKCksIG5vdy5nZXRNb250aCgpLCBub3cuZ2V0RGF0ZSgpKQ0KICAgIGNvbnN0IG1pbkRhdGUgPSBuZXcgRGF0ZSh0b2RheSkNCiAgICBjb25zdCBtYXhEYXRlID0gbmV3IERhdGUodG9kYXkpDQogICAgbWF4RGF0ZS5zZXRNb250aChtYXhEYXRlLmdldE1vbnRoKCkgKyA2KQ0KDQogICAgcmV0dXJuIHsNCiAgICAgIGFmdGVyU3VibWl0OiBmYWxzZSwNCiAgICAgIG1pbjogbWluRGF0ZSwNCiAgICAgIG1heDogbWF4RGF0ZSwNCiAgICAgIGludGVydmFsOiBudWxsLA0KICAgICAgdGVtcEFycmF5OiBbXSwNCiAgICAgIGRhdGVTdGF0ZTpudWxsLA0KICAgICAgdGltZVN0YXRlOm51bGwsDQogICAgICBhcHBvaW50bWVudDp7DQogICAgICAgIGRhdGU6ICcnLA0KICAgICAgICBlbWFpbDogdGhpcy4kYXV0aC51c2VyLmVtYWlsLA0KICAgICAgfQ0KICAgIH0NCiAgfSwNCiAgLy8gbWFrZXMgdGhlIGRhdGEgdXBkYXRlZCB3aXRob3V0IHJlZnJlc2hpbmcgcGFnZQ0KICBhc3luYyBtb3VudGVkKCl7DQogICAgdGhpcy5pbnRlcnZhbCA9IHNldEludGVydmFsKHRoaXMucmVmcmVzaFRpbWVzLCA1MCkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIC8vIEdldCBldmVyeSBib29rZWQgYXBwb2ludG1lbnQgZnJvbSBkYXRhYmFzZQ0KICAgIGFzeW5jIHJlZnJlc2hUaW1lcygpew0KICAgICAgbGV0IHVyaSA9ICdodHRwOi8vbG9jYWxob3N0OjQwMDAvYXBwb2ludG1lbnRzL2FsbCcNCiAgICAgIGNvbnN0IHRva2VuID0gYXdhaXQgdGhpcy4kYXV0aC5nZXRUb2tlblNpbGVudGx5KCk7DQogICAgICAgIA0KICAgICAgYXdhaXQgdGhpcy5heGlvcy5nZXQodXJpLCB7DQogICAgICAgIGhlYWRlcnM6ew0KICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt0b2tlbn1gLA0KICAgICAgICAgICJDb250ZW50LXR5cGUiOiAiYXBwbGljYXRpb24vanNvbiINCiAgICAgICAgfSwNCiAgICAgIH0pLnRoZW4ocmVzcG9uc2UgPT4gew0KICAgICAgICAgIHRoaXMudGVtcEFycmF5ID0gcmVzcG9uc2UuZGF0YQ0KICAgICAgfSkNCiAgICB9LA0KICAgIC8vIENoZWNrcyBpZiBkYXRlIGFuZCB0aW1lIGlzIGVudGVyZWQNCiAgICBjaGVja0Zvcm1WYWxpZGl0eSgpIHsNCiAgICAgIGlmKHRoaXMuYXBwb2ludG1lbnQuZGF0ZSA9PT0gJycpew0KICAgICAgICB0aGlzLmRhdGVTdGF0ZSA9IGZhbHNlDQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgdGhpcy5kYXRlU3RhdGUgPSB0cnVlDQogICAgICB9DQogICAgICBpZih0aGlzLmFwcG9pbnRtZW50LnRpbWUgPT09ICcnKXsNCiAgICAgICAgdGhpcy50aW1lU3RhdGUgPSBmYWxzZQ0KICAgICAgICByZXR1cm4gZmFsc2UNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMudGltZVN0YXRlID0gdHJ1ZQ0KICAgICAgfQ0KICAgICAgICANCiAgICAgIHJldHVybiB0cnVlDQogICAgfSwNCiAgICAvLyBSZXNldCB0aGUgZW50ZXJlZCB2YWx1ZXMgd2hlbiBjbG9zaW5nIHRoZSBtb2RhbA0KICAgIHJlc2V0TW9kYWwoKSB7DQogICAgICB0aGlzLmFwcG9pbnRtZW50LmRhdGUgPSAnJw0KICAgICAgdGhpcy5hcHBvaW50bWVudC50aW1lID0gJycNCiAgICAgIHRoaXMuZGF0ZVN0YXRlID0gbnVsbA0KICAgICAgdGhpcy50aW1lU3RhdGUgPSBudWxsDQogICAgfSwNCiAgICAvLyBQcmV2ZW50IGZyb20gY2xvc2luZyBpZiB0aGUgdmFsdWVzIGFyZSBub3QgdmFsaWQNCiAgICBoYW5kbGVPayhidk1vZGFsRXZ0KSB7DQogICAgICAvLyBQcmV2ZW50IG1vZGFsIGZyb20gY2xvc2luZw0KICAgICAgYnZNb2RhbEV2dC5wcmV2ZW50RGVmYXVsdCgpDQogICAgICAvLyBUcmlnZ2VyIHN1Ym1pdCBoYW5kbGVyDQogICAgICB0aGlzLmFkZEFwcG9pbnRtZW50KCkNCiAgICB9LA0KICAgIC8vIFN1Ym1pdCB0aGUgZm9ybSBhbmQgYWRkIHRoZSBuZXcgYXBwb2ludG1lbnQgdG8gdGhlIGRhdGFiYXNlDQogICAgYXN5bmMgYWRkQXBwb2ludG1lbnQoKXsNCiAgICAgIGlmKCF0aGlzLmNoZWNrRm9ybVZhbGlkaXR5KCkpew0KICAgICAgICByZXR1cm4NCiAgICAgIH0gDQoNCiAgICAgIGxldCB1cmkgPSAnaHR0cDovL2xvY2FsaG9zdDo0MDAwL2FwcG9pbnRtZW50cy9hZGQnOw0KICAgICAgY29uc3QgdG9rZW4gPSBhd2FpdCB0aGlzLiRhdXRoLmdldFRva2VuU2lsZW50bHkoKTsNCg0KICAgICAgdGhpcy5heGlvcy5wb3N0KHVyaSwgSlNPTi5zdHJpbmdpZnkodGhpcy5hcHBvaW50bWVudCksIHsNCiAgICAgICAgaGVhZGVyczp7DQogICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3Rva2VufWAsDQogICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJw0KICAgICAgICB9DQogICAgICB9KQ0KDQogICAgICAvLyAiY2xvc2UiIHRoZSBtb2RhbA0KICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gew0KICAgICAgICB0aGlzLiRidk1vZGFsLmhpZGUoJ21vZGFsLXByZXZlbnQtY2xvc2luZycpDQogICAgICB9KQ0KDQogICAgICAvLyByZXNldCB2YWx1ZXMgYWZ0ZXIgc3VibWl0DQogICAgICB0aGlzLmFwcG9pbnRtZW50LmRhdGUgPSAnJw0KICAgICAgdGhpcy5hcHBvaW50bWVudC50aW1lID0gJycNCiAgICB9LA0KICAgIC8vIERpc2FibGUgd2Vla2VuZHMNCiAgICBkYXRlRGlzYWJsZWQoeW1kLCBkYXRlKSB7DQogICAgICBjb25zdCB3ZWVrZGF5ID0gZGF0ZS5nZXREYXkoKQ0KICAgICAgLy8gUmV0dXJuIGB0cnVlYCBpZiB0aGUgZGF0ZSBzaG91bGQgYmUgZGlzYWJsZWQNCiAgICAgIHJldHVybiB3ZWVrZGF5ID09PSAwIHx8IHdlZWtkYXkgPT09IDYNCiAgICB9LA0KICAgIC8vIEZpbmQgYXZhaWxhYmxlIHRpbWVzIGFuZCBwcmludCB0aGVtIG91dA0KICAgIHByaW50VGltZXModGVtcEFycmF5KXsNCiAgICAgIHZhciB0aW1lcyA9IFsnODowMCAtIDk6MDAnLCAnOTowMCAtIDEwOjAwJywgJzEwOjAwIC0gMTE6MDAnXSANCiAgICAgIA0KICAgICAgZm9yKHZhciBpID0gMDsgaSA8IHRlbXBBcnJheS5sZW5ndGg7IGkrKyl7DQogICAgICAgIGlmKHRoaXMuYXBwb2ludG1lbnQuZGF0ZSA9PSB0ZW1wQXJyYXlbaV0uZGF0ZSl7DQogICAgICAgICAgZm9yKHZhciBqID0gMDsgaiA8IHRpbWVzLmxlbmd0aDsgaisrKXsNCiAgICAgICAgICAgIGlmKHRpbWVzW2pdID09IHRlbXBBcnJheVtpXS50aW1lKXsNCiAgICAgICAgICAgICAgZGVsZXRlIHRpbWVzW2pdDQogICAgICAgICAgICB9DQogICAgICAgICAgfSAgIA0KICAgICAgICB9DQogICAgICB9IA0KICAgICAgcmV0dXJuIHRpbWVzDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["NewAppointment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"NewAppointment.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <!-- Button to open the modal -->\r\n  <div>\r\n    <b-container fluid>\r\n      <b-row>\r\n        <b-col col sm=\"12\" md=\"12\" lg=\"9\" xl=\"9\" class=\"p-2\">\r\n          <div class=\"alert alert-secondary rounded-0 shadow-sm\">\r\n            <b-button v-b-modal.modal-prevent-closing>New Appointment</b-button>\r\n          </div>\r\n        </b-col>\r\n      </b-row>\r\n    </b-container>\r\n\r\n    <!-- The modal with the form -->\r\n    <b-modal\r\n      id=\"modal-prevent-closing\"\r\n      ref=\"modal\"\r\n      title=\"Book An Appointment\"\r\n      @show=\"resetModal\"\r\n      @hidden=\"resetModal\"\r\n      @ok=\"handleOk\">\r\n      <form ref=\"form\" @submit.prevent=\"addAppointment\">\r\n        <b-form-group\r\n          label=\"Select a date\"\r\n          label-for=\"date-input\"\r\n          invalid-feedback=\"Date is required\"\r\n          :state=\"dateState\">\r\n          <b-form-datepicker id=\"datepicker-dateformat\" \r\n            :date-disabled-fn=\"dateDisabled\"\r\n            :min=\"min\"\r\n            :max=\"max\"\r\n            :date-format-options=\"{ weekday: 'long', day: 'numeric',month: 'long', year: 'numeric'}\"\r\n            v-model=\"appointment.date\"\r\n            required>\r\n          </b-form-datepicker>\r\n        </b-form-group>\r\n        <b-form-group \r\n          v-if=\"this.appointment.date != ''\"\r\n          label=\"Select a time\"\r\n          label-for=\"time-input\"\r\n          invalid-feedback=\"Time is required\"\r\n          :state=\"timeState\">\r\n          <b-form-radio-group class=\"pt-2\" \r\n            :options=\"printTimes(tempArray)\"  \r\n            v-model=\"appointment.time\"\r\n            required>\r\n          </b-form-radio-group>\r\n        </b-form-group>\r\n      </form>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"newAppointment\",\r\n  data(){\r\n    // Start from todays date\r\n    const now = new Date()\r\n    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate())\r\n    const minDate = new Date(today)\r\n    const maxDate = new Date(today)\r\n    maxDate.setMonth(maxDate.getMonth() + 6)\r\n\r\n    return {\r\n      afterSubmit: false,\r\n      min: minDate,\r\n      max: maxDate,\r\n      interval: null,\r\n      tempArray: [],\r\n      dateState:null,\r\n      timeState:null,\r\n      appointment:{\r\n        date: '',\r\n        email: this.$auth.user.email,\r\n      }\r\n    }\r\n  },\r\n  // makes the data updated without refreshing page\r\n  async mounted(){\r\n    this.interval = setInterval(this.refreshTimes, 50)\r\n  },\r\n  methods: {\r\n    // Get every booked appointment from database\r\n    async refreshTimes(){\r\n      let uri = 'http://localhost:4000/appointments/all'\r\n      const token = await this.$auth.getTokenSilently();\r\n        \r\n      await this.axios.get(uri, {\r\n        headers:{\r\n          Authorization: `Bearer ${token}`,\r\n          \"Content-type\": \"application/json\"\r\n        },\r\n      }).then(response => {\r\n          this.tempArray = response.data\r\n      })\r\n    },\r\n    // Checks if date and time is entered\r\n    checkFormValidity() {\r\n      if(this.appointment.date === ''){\r\n        this.dateState = false\r\n        return false\r\n      } else {\r\n        this.dateState = true\r\n      }\r\n      if(this.appointment.time === ''){\r\n        this.timeState = false\r\n        return false\r\n      } else {\r\n        this.timeState = true\r\n      }\r\n        \r\n      return true\r\n    },\r\n    // Reset the entered values when closing the modal\r\n    resetModal() {\r\n      this.appointment.date = ''\r\n      this.appointment.time = ''\r\n      this.dateState = null\r\n      this.timeState = null\r\n    },\r\n    // Prevent from closing if the values are not valid\r\n    handleOk(bvModalEvt) {\r\n      // Prevent modal from closing\r\n      bvModalEvt.preventDefault()\r\n      // Trigger submit handler\r\n      this.addAppointment()\r\n    },\r\n    // Submit the form and add the new appointment to the database\r\n    async addAppointment(){\r\n      if(!this.checkFormValidity()){\r\n        return\r\n      } \r\n\r\n      let uri = 'http://localhost:4000/appointments/add';\r\n      const token = await this.$auth.getTokenSilently();\r\n\r\n      this.axios.post(uri, JSON.stringify(this.appointment), {\r\n        headers:{\r\n          Authorization: `Bearer ${token}`,\r\n          'content-type': 'application/json'\r\n        }\r\n      })\r\n\r\n      // \"close\" the modal\r\n      this.$nextTick(() => {\r\n        this.$bvModal.hide('modal-prevent-closing')\r\n      })\r\n\r\n      // reset values after submit\r\n      this.appointment.date = ''\r\n      this.appointment.time = ''\r\n    },\r\n    // Disable weekends\r\n    dateDisabled(ymd, date) {\r\n      const weekday = date.getDay()\r\n      // Return `true` if the date should be disabled\r\n      return weekday === 0 || weekday === 6\r\n    },\r\n    // Find available times and print them out\r\n    printTimes(tempArray){\r\n      var times = ['8:00 - 9:00', '9:00 - 10:00', '10:00 - 11:00'] \r\n      \r\n      for(var i = 0; i < tempArray.length; i++){\r\n        if(this.appointment.date == tempArray[i].date){\r\n          for(var j = 0; j < times.length; j++){\r\n            if(times[j] == tempArray[i].time){\r\n              delete times[j]\r\n            }\r\n          }   \r\n        }\r\n      } \r\n      return times\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]}]}